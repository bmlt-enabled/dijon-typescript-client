/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MeetingEvent } from './MeetingEvent';
import {
    MeetingEventFromJSON,
    MeetingEventFromJSONTyped,
    MeetingEventToJSON,
} from './MeetingEvent';

/**
 * 
 * @export
 * @interface MeetingChangesResponse
 */
export interface MeetingChangesResponse {
    /**
     * 
     * @type {Date}
     * @memberof MeetingChangesResponse
     */
    startDate: Date;
    /**
     * 
     * @type {Date}
     * @memberof MeetingChangesResponse
     */
    endDate: Date;
    /**
     * 
     * @type {Array<MeetingEvent>}
     * @memberof MeetingChangesResponse
     */
    events: Array<MeetingEvent>;
}

/**
 * Check if a given object implements the MeetingChangesResponse interface.
 */
export function instanceOfMeetingChangesResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "startDate" in value;
    isInstance = isInstance && "endDate" in value;
    isInstance = isInstance && "events" in value;

    return isInstance;
}

export function MeetingChangesResponseFromJSON(json: any): MeetingChangesResponse {
    return MeetingChangesResponseFromJSONTyped(json, false);
}

export function MeetingChangesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): MeetingChangesResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'startDate': (new Date(json['start_date'])),
        'endDate': (new Date(json['end_date'])),
        'events': ((json['events'] as Array<any>).map(MeetingEventFromJSON)),
    };
}

export function MeetingChangesResponseToJSON(value?: MeetingChangesResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'start_date': (value.startDate.toISOString().substr(0,10)),
        'end_date': (value.endDate.toISOString().substr(0,10)),
        'events': ((value.events as Array<any>).map(MeetingEventToJSON)),
    };
}

